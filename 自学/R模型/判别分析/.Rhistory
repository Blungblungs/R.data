colnames(data1)<-c("x1","x2","y")
lm.sol<-lm(y~x1+x2,data1)
data1<-data.frame(data1)
colnames(data1)<-c("x1","x2","y")
lm.sol<-lm(y~x1+x2,data1)
summary(lm.sol)
rep(c(3,2,1),c(3,4,5))
A<-matrix(1:16,4,4);A
B<-matrix(1:16,4,4,byrow=TRUE);B
C<-A+B;C
D<-A%*%B;D
E<-A*B;E
A<-A[-3,];A
B<-B[,-3];B
E=A%*%B;E
A<-A[-3,];A
B<-B[,-3];B
E=A*B;E
url <- 'https://www.zhihu.com/question/19647535'
link<- read_html(url)%>% html_nodes("div.zm-editable-content.clearfix")%>%html_nodes("img")%>%html_attr("src")
url <- 'https://www.zhihu.com/question/19647535'
link<- read_html(url)%>% html_nodes("div.zm-editable-content.clearfix")%>%html_nodes("img")%>%html_attr("src")
library("rvest")
library("downloader")
library("stringr")
library("dplyr")
url <- 'https://www.zhihu.com/question/19647535'
link<- read_html(url)%>% html_nodes("div.zm-editable-content.clearfix")%>%html_nodes("img")%>%html_attr("src")
link
url <- 'https://www.zhihu.com/question/19647535'
link<- read_html(url)%>% html_nodes("RichContent RichContent--unescapable")%>%html_nodes("img")%>%html_attr("src")
link
link<- read_html(url)%>% html_nodes("RichContent.RichContent--unescapable")%>%html_nodes("img")%>%html_attr("src")
link
link<- read_html(url)%>% html_nodes("RichContent.RichContent-unescapable")%>%html_nodes("img")%>%html_attr("src")
link
url <- 'https://www.zhihu.com/question/19647535'
link<- read_html(url)%>% html_nodes("RichContent-inner")%>%html_nodes("img")%>%html_attr("src")
url <- 'https://www.zhihu.com/question/19647535'
link<- read_html(url)%>% html_nodes("RichContent-inner")%>%html_nodes("img")%>%html_attr("src")
link
link<- read_html(url)%>% html_nodes("RichContent-inner")%>%html_nodes("img")%>%html_attr("src")
link
link<- read_html(url)%>% html_nodes("RichContent.RichContent--unescapable")%>%html_nodes("img")%>%html_attr("src")
link
link<- read_html(url)%>% html_nodes("RichContent.RichContent-unescapable")%>%html_nodes("img")%>%html_attr("src")
link
link<- read_html(url)%>% html_nodes("div.RichContent.RichContent-unescapable")%>%html_nodes("img")%>%html_attr("src")
link
link<- read_html(url)%>% html_nodes("div.RichContent.RichContent-unescapable")%>%html_nodes("img")%>%html_attr("src")
link
link
library(rvest)
library(downloader)
url<-"https://www.zhihu.com/question/35931586/answer/206258333"
link<- read_html(url)%>% html_nodes("div.RichContent-inner>span")%>%html_nodes("img")%>%html_attr("data-original")%>%na.omit
link
link<-link[seq(1,length(link),by=2)] #剔除无效网址
link
library("httr")
library("dplyr")
library("jsonlite")
library("curl")
library("magrittr")
library("rlist")
library("pipeR")
library("plyr")
install.oackages("rlist")
install.packages("rlist")
library("httr")
library("dplyr")
library("jsonlite")
library("curl")
library("magrittr")
library("rlist")
library("pipeR")
library("plyr")
url<-"http://study.163.com/p/search/studycourse.json"
url<-"http://study.163.com/p/search/studycourse.json"
Cookie='_ntes_nnid=c66416fa1d63fad39a3897ae8f07b31a,1494123356006; _ntes_nuid=c66416fa1d63fad39a3897ae8f07b31a; EDUWEBDEVICE=0080cad25b35486e95538d6aa85091e3; NTESSTUDYSI=f745d5b72464457ca934b64f79d8b60f; utm="eyJjIjoiIiwiY3QiOiIiLCJpIjoiIiwibSI6IiIsInMiOiIiLCJ0IjoiIn0=|"; __utma=129633230.633425057.1506842309.1506842309.1507785144.2; __utmb=129633230.15.9.1507785261037; __utmc=129633230; __utmz=129633230.1506842309.1.1.utmcsr=so.com|utmccn=(referral)|utmcmd=referral|utmcct=/link'
headers <- c('Accept'='application/json',
'Content-Type'='application/json',
'User-Agent'='Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36',
'edu-script-token'= '3e44b18e2cea46b6890d1cf92c1ad606',
'Referer'='http://study.163.com/category/dataanalysis',
'Connection'='keep-alive',
'Cookie'=Cookie
)
headers
payload<-list(
'pageIndex'=1,
'pageSize'=50,
'relativeOffset'=0,
'frontCategoryId'='400000000709002'
)
url<-"http://study.163.com/p/search/studycourse.json"
r <- POST(url,add_headers(.headers =headers),body =payload, encode="json",verbose())
myresult1 <-r %>% content() %>%`[[`(3) %>% `[[`(2) %>% toJSON() %>% fromJSON(simplifyDataFrame=TRUE)
myresult1
r
myresult1
myresult1 <-r %>% content() %>%`[[`(3) %>% `[[`(2) %>% toJSON() %>% fromJSON(simplifyDataFrame=TRUE)
myresult1
url<-"http://study.163.com/p/search/studycourse.json"
Cookie='_ntes_nnid=c66416fa1d63fad39a3897ae8f07b31a,1494123356006; _ntes_nuid=c66416fa1d63fad39a3897ae8f07b31a; EDUWEBDEVICE=0080cad25b35486e95538d6aa85091e3; NTESSTUDYSI=f745d5b72464457ca934b64f79d8b60f; utm="eyJjIjoiIiwiY3QiOiIiLCJpIjoiIiwibSI6IiIsInMiOiIiLCJ0IjoiIn0=|"; __utma=129633230.633425057.1506842309.1506842309.1507785144.2; __utmb=129633230.15.9.1507785261037; __utmc=129633230; __utmz=129633230.1506842309.1.1.utmcsr=so.com|utmccn=(referral)|utmcmd=referral|utmcct=/link'
#构造浏览器报头信息：
headers <- c('Accept'='application/json',
'Content-Type'='application/json',
'User-Agent'='Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36',
'edu-script-token'= '3e44b18e2cea46b6890d1cf92c1ad606',
'Referer'='http://study.163.com/category/dataanalysis',
'Connection'='keep-alive',
'Cookie'=Cookie
)
#构造请求头参数信息：（这里只接受list）
payload<-list(
'pageIndex'=1,
'pageSize'=50,
'relativeOffset'=0,
'frontCategoryId'='400000000709002'
)
#第五步：单步执行：
r <- POST(url,add_headers(.headers =headers),body =payload, encode="json",verbose())
myresult1 <-r %>% content() %>%`[[`(3) %>% `[[`(2) %>% toJSON() %>% fromJSON(simplifyDataFrame=TRUE)
myresult1
summary(myresult1)
Cookie='_ntes_nnid=c66416fa1d63fad39a3897ae8f07b31a,1494123356006; _ntes_nuid=c66416fa1d63fad39a3897ae8f07b31a; EDUWEBDEVICE=0080cad25b35486e95538d6aa85091e3; NTESSTUDYSI=f745d5b72464457ca934b64f79d8b60f; utm="eyJjIjoiIiwiY3QiOiIiLCJpIjoiIiwibSI6IiIsInMiOiIiLCJ0IjoiIn0=|"; __utma=129633230.633425057.1506842309.1506842309.1507785144.2; __utmb=129633230.15.9.1507785261037; __utmc=129633230; __utmz=129633230.1506842309.1.1.utmcsr=so.com|utmccn=(referral)|utmcmd=referral|utmcct=/link'
Cookie
read.delim("clipboard")
data1<-read.delim("clipboard")
View(data1)
View(data1)
data2<-data1[is.na()]
data2<-data1[is.na]
data2<-data1[is.na(data1)]
data2<-data1[!is.na(data1)]
data2
data2<-na.omit(data1)
head(data2)
plot(LCT~KFI,data2)
sunflowerplot(LCT~KFI)
sunflowerplot(LCT,KFI)
sunflowerplot(LCT~KFI,data2)
？sunflowerplot
?sunflowerplot
sunflowerplot(x = sort(2*round(rnorm(100))), y = round(rnorm(100), 0),
main = "Sunflower Plot of Rounded N(0,1)")
sunflowerplot(x = sort(2*rnorm(100)), y = round(rnorm(100), 0))
?sunflowerplot
pie(LCT)
attach(data1)
pie(LCT)
pie(abs(LCT))
LCT
attach(data2)
LCT
pie(abs(LCT))
pie(abs(LCT[1:6]))
pie(abs(LCT[1:60]))
pie(abs(LCT[1:2]))
head(LCT)
pie(abs(LCT[1:6]))
boxplot(LCT[1:6]))
boxplot(LCT)
stripchart(LCT[1:6]))
stripchart(LCT)
plot(LCT~KFI,data2)
head(data2)
coplot(LCT~KFI|vas_2)
matplot(LCT~KFI)
matplot(LCT,KFI)
masaicplot(LCT)
mosaicplot(LCT)
mosaicplot(LCT[1:6])
pairs(LCT[1:6])
pairs(data2)
qqplot(LCT[1:6])
qqplot(LCT)
qqplot(LCT,KFI)
ggplot2(LCT,KFI)
library(gplots)
ggplot2(LCT,KFI)
library(gplot2)
library(ggplot2)
ggplot2(LCT,KFI)
gplot2(LCT,KFI)
gplot(LCT,KFI)
ggplot(LCT,KFI)
image(LCT,KFI)
image(data2)
data3<-cblind(1:9,rep(1,5,2))
data3<-cbind(1:9,rep(1,5,2))
data3<-cbind(1:10,rep(1,5,2))
data3
data3<-cbind(1:10,rep(1:5,2))
data3
image(data3)
contour(data3)
filled.contour(data3)
persp(data3)
stars(data3)
image(data3)
image(data3,xlab = c(0,1),ylab = c(-1,2),main="image形成的图片",sub="庄亮亮!"
image(data3,xlab = c(0,1),ylab = c(-1,2),main="image形成的图片",sub="庄亮亮!")
?xlim
image(data3,xlim = c(0,1),ylim = c(-1,2),main="image形成的图片",sub="庄亮亮!")
image(data3,xlim = c(0,1),ylim = c(-1,2),main="image形成的图片",sub="图一")
image(data3,xlim = c(0,1),ylim = c(-1,2),main="image形成的图片",sub="   图一")
image(data3,xlim = c(0,1),ylim = c(-1,2),main="image形成的图片",sub="图一"，xlab="x"，ylab="y")
image(data3,xlim = c(0,1),ylim = c(-1,2),main="image形成的图片",sub="图一"，xlab="x"，ylab="y")
image(data3,xlim = c(0,1),ylim = c(-1,2),main="image形成的图片",sub="图一",xlab="x"，ylab="y")
image(data3,xlim = c(0,1),ylim = c(-1,2),main="image形成的图片",sub="图一",xlab="x",ylab="y")
###2.6.2低级绘图命令
points(data3)
points(data3)
?points
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
points(rnorm(100)/2, rnorm(100)/2, col = "blue", cex = 1.5)
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), col = "red")
points(rnorm(100)/2, col = "blue", cex = 1.5)
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
points(rnorm(100)/2, rnorm(100)/2, col = "blue", cex = 1.5)
lines(rnorm(100)/2, rnorm(100)/2)
lines(1,2)
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
lines(1,2)
lines(1,2000)
lines(100,2000)
lines(1)
abline(2,32)
abline(2,3)
abline(2)
abline(h=2)
rect(1,1,1,1)
rect(1,1,1,1)
rect(1,1,1,1)
rect(1:2,1:5,1,1)
?rect
rect(100, 300, 125, 350)
rect(100, 300, 125, 350)
rect(100, 300, 125, 350) # transparent
plot(c(100, 200), c(300, 450), type= "n", xlab = "", ylab = "")
rect(100, 300, 125, 350) # transparent
#例子rect()
?legend()
x <- seq(-pi, pi, len = 65)
plot(x, sin(x), type = "l", ylim = c(-1.2, 1.8), col = 3, lty = 2)
points(x, cos(x), pch = 3, col = 4)
lines(x, tan(x), type = "b", lty = 1, pch = 4, col = 6)
title("legend(..., lty = c(2, -1, 1), pch = c(NA, 3, 4), merge = TRUE)",
cex.main = 1.1)
legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3, 4, 6),
text.col = "green4", lty = c(2, -1, 1), pch = c(NA, 3, 4),
merge = TRUE, bg = "gray90")
len = 65
x <- seq(-pi, pi, len = 65)
plot(x, sin(x), type = "l", ylim = c(-1.2, 1.8), col = 3, lty = 2)
?seq
plot(x, sin(x), type = "l", ylim = c(-1.2, 1.8), col = 3, lty = 2)
points(x, cos(x), pch = 3, col = 4)
lines(x, tan(x), type = "b", lty = 1, pch = 4, col = 6)
title("legend(..., lty = c(2, -1, 1), pch = c(NA, 3, 4), merge = TRUE)",
cex.main = 1.1)
legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3, 4, 6),
text.col = "green4", lty = c(2, -1, 1), pch = c(NA, 3, 4),
merge = TRUE, bg = "gray90")
text(0,0,expression(p==over(1,1+e^-(beta*x+alpha))))
?par
dim(Puromycin)
head(Puromycin)
Puromycin
x<-sub(Puromycin,state==treated)
x<-sub(Puromycin,state=="treated")
?sub
?subset'
?subset
?subset
x<-subset(Puromycin,state=="treated")
x<-subset(Puromycin,state=="treated")
?subset
?subset
x
x
dim(Puromycin)
head(Puromycin)
x<-subset(Puromycin,state=="treated")
classX1<-data.frame(
x1=c(6.60, 6.60, 6.10, 6.10, 8.40, 7.2, 8.40, 7.50,
7.50, 8.30, 7.80, 7.80),
x2=c(39.00,39.00, 47.00, 47.00, 32.00, 6.0, 113.00, 52.00,
52.00,113.00,172.00,172.00),
x3=c(1.00, 1.00, 1.00, 1.00, 2.00, 1.0, 3.50, 1.00,
3.50, 0.00, 1.00, 1.50),
x4=c(6.00, 6.00, 6.00, 6.00, 7.50, 7.0, 6.00, 6.00,
7.50, 7.50, 3.50, 3.00),
x5=c(6.00, 12.00, 6.00, 12.00, 19.00, 28.0, 18.00, 12.00,
6.00, 35.00, 14.00, 15.00),
x6=c(0.12, 0.12, 0.08, 0.08, 0.35, 0.3, 0.15, 0.16,0.16,
0.12, 0.21, 0.21),
x7=c(20.00,20.00, 12.00, 12.00, 75.00, 30.0, 75.00, 40.00,
40.00,180.00, 45.00, 45.00)
)
classX2<-data.frame(
x1=c(8.40, 8.40, 8.40, 6.3, 7.00, 7.00, 7.00, 8.30,
8.30, 7.2, 7.2, 7.2, 5.50, 8.40, 8.40, 7.50,
7.50, 8.30, 8.30, 8.30, 8.30, 7.80, 7.80),
x2=c(32.0 ,32.00, 32.00, 11.0, 8.00, 8.00, 8.00,161.00,
161.0, 6.0, 6.0, 6.0, 6.00,113.00,113.00, 52.00,
52.00, 97.00, 97.00,89.00,56.00,172.00,283.00),
x3=c(1.00, 2.00, 2.50, 4.5, 4.50, 6.00, 1.50, 1.50,
0.50, 3.5, 1.0, 1.0, 2.50, 3.50, 3.50, 1.00,
1.00, 0.00, 2.50, 0.00, 1.50, 1.00, 1.00),
x4=c(5.00, 9.00, 4.00, 7.5, 4.50, 7.50, 6.00, 4.00,
2.50, 4.0, 3.0, 6.0, 3.00, 4.50, 4.50, 6.00,
7.50, 6.00, 6.00, 6.00, 6.00, 3.50, 4.50),
x5=c(4.00, 10.00, 10.00, 3.0, 9.00, 4.00, 1.00, 4.00,
1.00, 12.0, 3.0, 5.0, 7.00, 6.00, 8.00, 6.00,
8.00, 5.00, 5.00,10.00,13.00, 6.00, 6.00),
x6=c(0.35, 0.35, 0.35, 0.2, 0.25, 0.25, 0.25, 0.08,
0.08, 0.30, 0.3, 0.3, 0.18, 0.15, 0.15, 0.16,
0.16, 0.15, 0.15, 0.16, 0.25, 0.21, 0.18),
x7=c(75.00,75.00, 75.00, 15.0,30.00, 30.00, 30.00, 70.00,
70.00, 30.0, 30.0, 30.0,18.00, 75.00, 75.00, 40.00,
40.00,180.00,180.00,180.00,180.00,45.00,45.00)
)
source("discriminiant.distance.R")
discriminiant.distance(classX1, classX2, var.equal=TRUE)
source("discriminiant.distance.R")
setwd("D:\\R\\我的资料集\\自学\\R模型\\判别分析")
source("discriminiant.distance.R")
discriminiant.distance(classX1, classX2, var.equal=TRUE)
discriminiant.distance(classX1, classX2)
discriminiant.distance(classX1, classX2)
discriminiant.distance(classX1, classX2, var.equal=TRUE)
discriminiant.distance(classX1, classX2)
classX1<-data.frame(
x1=c(6.60, 6.60, 6.10, 6.10, 8.40, 7.2, 8.40, 7.50,
7.50, 8.30, 7.80, 7.80),
x2=c(39.00,39.00, 47.00, 47.00, 32.00, 6.0, 113.00, 52.00,
52.00,113.00,172.00,172.00),
x3=c(1.00, 1.00, 1.00, 1.00, 2.00, 1.0, 3.50, 1.00,
3.50, 0.00, 1.00, 1.50),
x4=c(6.00, 6.00, 6.00, 6.00, 7.50, 7.0, 6.00, 6.00,
7.50, 7.50, 3.50, 3.00),
x5=c(6.00, 12.00, 6.00, 12.00, 19.00, 28.0, 18.00, 12.00,
6.00, 35.00, 14.00, 15.00),
x6=c(0.12, 0.12, 0.08, 0.08, 0.35, 0.3, 0.15, 0.16,0.16,
0.12, 0.21, 0.21),
x7=c(20.00,20.00, 12.00, 12.00, 75.00, 30.0, 75.00, 40.00,
40.00,180.00, 45.00, 45.00)
)
classX2<-data.frame(
x1=c(8.40, 8.40, 8.40, 6.3, 7.00, 7.00, 7.00, 8.30,
8.30, 7.2, 7.2, 7.2, 5.50, 8.40, 8.40, 7.50,
7.50, 8.30, 8.30, 8.30, 8.30, 7.80, 7.80),
x2=c(32.0 ,32.00, 32.00, 11.0, 8.00, 8.00, 8.00,161.00,
161.0, 6.0, 6.0, 6.0, 6.00,113.00,113.00, 52.00,
52.00, 97.00, 97.00,89.00,56.00,172.00,283.00),
x3=c(1.00, 2.00, 2.50, 4.5, 4.50, 6.00, 1.50, 1.50,
0.50, 3.5, 1.0, 1.0, 2.50, 3.50, 3.50, 1.00,
1.00, 0.00, 2.50, 0.00, 1.50, 1.00, 1.00),
x4=c(5.00, 9.00, 4.00, 7.5, 4.50, 7.50, 6.00, 4.00,
2.50, 4.0, 3.0, 6.0, 3.00, 4.50, 4.50, 6.00,
7.50, 6.00, 6.00, 6.00, 6.00, 3.50, 4.50),
x5=c(4.00, 10.00, 10.00, 3.0, 9.00, 4.00, 1.00, 4.00,
1.00, 12.0, 3.0, 5.0, 7.00, 6.00, 8.00, 6.00,
8.00, 5.00, 5.00,10.00,13.00, 6.00, 6.00),
x6=c(0.35, 0.35, 0.35, 0.2, 0.25, 0.25, 0.25, 0.08,
0.08, 0.30, 0.3, 0.3, 0.18, 0.15, 0.15, 0.16,
0.16, 0.15, 0.15, 0.16, 0.25, 0.21, 0.18),
x7=c(75.00,75.00, 75.00, 15.0,30.00, 30.00, 30.00, 70.00,
70.00, 30.0, 30.0, 30.0,18.00, 75.00, 75.00, 40.00,
40.00,180.00,180.00,180.00,180.00,45.00,45.00)
)
setwd("D:\\R\\我的资料集\\自学\\R模型\\判别分析")
source("discriminiant.distance.R")
discriminiant.distance(classX1, classX2, var.equal=TRUE)
discriminiant.distance(classX1, classX2)
classX1<-data.frame(
x1=c(6.60, 6.60, 6.10, 6.10, 8.40, 7.2, 8.40, 7.50,
7.50, 8.30, 7.80, 7.80),
x2=c(39.00,39.00, 47.00, 47.00, 32.00, 6.0, 113.00, 52.00,
52.00,113.00,172.00,172.00),
x3=c(1.00, 1.00, 1.00, 1.00, 2.00, 1.0, 3.50, 1.00,
3.50, 0.00, 1.00, 1.50),
x4=c(6.00, 6.00, 6.00, 6.00, 7.50, 7.0, 6.00, 6.00,
7.50, 7.50, 3.50, 3.00),
x5=c(6.00, 12.00, 6.00, 12.00, 19.00, 28.0, 18.00, 12.00,
6.00, 35.00, 14.00, 15.00),
x6=c(0.12, 0.12, 0.08, 0.08, 0.35, 0.3, 0.15, 0.16,0.16,
0.12, 0.21, 0.21),
x7=c(20.00,20.00, 12.00, 12.00, 75.00, 30.0, 75.00, 40.00,
40.00,180.00, 45.00, 45.00)
)
classX2<-data.frame(
x1=c(8.40, 8.40, 8.40, 6.3, 7.00, 7.00, 7.00, 8.30,
8.30, 7.2, 7.2, 7.2, 5.50, 8.40, 8.40, 7.50,
7.50, 8.30, 8.30, 8.30, 8.30, 7.80, 7.80),
x2=c(32.0 ,32.00, 32.00, 11.0, 8.00, 8.00, 8.00,161.00,
161.0, 6.0, 6.0, 6.0, 6.00,113.00,113.00, 52.00,
52.00, 97.00, 97.00,89.00,56.00,172.00,283.00),
x3=c(1.00, 2.00, 2.50, 4.5, 4.50, 6.00, 1.50, 1.50,
0.50, 3.5, 1.0, 1.0, 2.50, 3.50, 3.50, 1.00,
1.00, 0.00, 2.50, 0.00, 1.50, 1.00, 1.00),
x4=c(5.00, 9.00, 4.00, 7.5, 4.50, 7.50, 6.00, 4.00,
2.50, 4.0, 3.0, 6.0, 3.00, 4.50, 4.50, 6.00,
7.50, 6.00, 6.00, 6.00, 6.00, 3.50, 4.50),
x5=c(4.00, 10.00, 10.00, 3.0, 9.00, 4.00, 1.00, 4.00,
1.00, 12.0, 3.0, 5.0, 7.00, 6.00, 8.00, 6.00,
8.00, 5.00, 5.00,10.00,13.00, 6.00, 6.00),
x6=c(0.35, 0.35, 0.35, 0.2, 0.25, 0.25, 0.25, 0.08,
0.08, 0.30, 0.3, 0.3, 0.18, 0.15, 0.15, 0.16,
0.16, 0.15, 0.15, 0.16, 0.25, 0.21, 0.18),
x7=c(75.00,75.00, 75.00, 15.0,30.00, 30.00, 30.00, 70.00,
70.00, 30.0, 30.0, 30.0,18.00, 75.00, 75.00, 40.00,
40.00,180.00,180.00,180.00,180.00,45.00,45.00)
)
setwd("D:\\R\\我的资料集\\自学\\R模型\\判别分析")
source("discriminiant.distance.R")
discriminiant.distance(classX1, classX2, var.equal=TRUE)
discriminiant.distance(classX1, classX2)
classX1<-data.frame(
x1=c(6.60, 6.60, 6.10, 6.10, 8.40, 7.2, 8.40, 7.50,
7.50, 8.30, 7.80, 7.80),
x2=c(39.00,39.00, 47.00, 47.00, 32.00, 6.0, 113.00, 52.00,
52.00,113.00,172.00,172.00),
x3=c(1.00, 1.00, 1.00, 1.00, 2.00, 1.0, 3.50, 1.00,
3.50, 0.00, 1.00, 1.50),
x4=c(6.00, 6.00, 6.00, 6.00, 7.50, 7.0, 6.00, 6.00,
7.50, 7.50, 3.50, 3.00),
x5=c(6.00, 12.00, 6.00, 12.00, 19.00, 28.0, 18.00, 12.00,
6.00, 35.00, 14.00, 15.00),
x6=c(0.12, 0.12, 0.08, 0.08, 0.35, 0.3, 0.15, 0.16,0.16,
0.12, 0.21, 0.21),
x7=c(20.00,20.00, 12.00, 12.00, 75.00, 30.0, 75.00, 40.00,
40.00,180.00, 45.00, 45.00)
is.null(TstX) == TRUE
TstX<-data.frame(
x1=c(6.60, 6.60, 6.10, 6.10, 8.40, 7.2, 8.40, 7.50,
7.50, 8.30, 7.80, 7.80),
x2=c(39.00,39.00, 47.00, 47.00, 32.00, 6.0, 113.00, 52.00,
52.00,113.00,172.00,172.00),
x3=c(1.00, 1.00, 1.00, 1.00, 2.00, 1.0, 3.50, 1.00,
3.50, 0.00, 1.00, 1.50),
x4=c(6.00, 6.00, 6.00, 6.00, 7.50, 7.0, 6.00, 6.00,
7.50, 7.50, 3.50, 3.00),
x5=c(6.00, 12.00, 6.00, 12.00, 19.00, 28.0, 18.00, 12.00,
6.00, 35.00, 14.00, 15.00),
x6=c(0.12, 0.12, 0.08, 0.08, 0.35, 0.3, 0.15, 0.16,0.16,
0.12, 0.21, 0.21),
x7=c(20.00,20.00, 12.00, 12.00, 75.00, 30.0, 75.00, 40.00,
40.00,180.00, 45.00, 45.00)
is.null(TstX) == TRUE
is.null(TstX)
####多分类问题的距离判别
distinguish.distance <- function
(TrnX, TrnG, TstX = NULL, var.equal = FALSE)
{
if ( is.factor(TrnG) == FALSE){
mx <- nrow(TrnX); mg <- nrow(TrnG)
TrnX <- rbind(TrnX, TrnG)
TrnG <- factor(rep(1:2, c(mx, mg)))
}
if (is.null(TstX) == TRUE) TstX <- TrnX
if (is.vector(TstX) == TRUE) TstX <- t(as.matrix(TstX))
else if (is.matrix(TstX) != TRUE)
TstX <- as.matrix(TstX)
if (is.matrix(TrnX) != TRUE) TrnX <- as.matrix(TrnX)
nx <- nrow(TstX)
blong <- matrix(rep(0, nx), nrow=1,
dimnames=list("blong", 1:nx))
g <- length(levels(TrnG))
mu <- matrix(0, nrow=g, ncol=ncol(TrnX))
for (i in 1:g)
mu[i,] <- colMeans(TrnX[TrnG==i,])
D < -matrix(0, nrow=g, ncol=nx)
if (var.equal == TRUE || var.equal == T){
for (i in 1:g)
D[i,] <- mahalanobis(TstX, mu[i,], var(TrnX))
}
else{
for (i in 1:g)
D[i,] <- mahalanobis(TstX, mu[i,], var(TrnX[TrnG==i,]))
}
for (j in 1:nx){
dmin <- Inf
for (i in 1:g)
if (D[i,j] < dmin){
dmin <- D[i,j]; blong[j] <- i
}
}
}
X<-iris[,1:4]
X
head(X)
source("distinguish.distance.R")
distinguish.distance(X,G)
G<-gl(3,50)
source("distinguish.distance.R")
distinguish.distance(X,G)
G
distinguish.distance(X,G)
gl(3,50)
G<-as.data.frame(gl(3,50))
source("distinguish.distance.R")
distinguish.distance(X,G)
