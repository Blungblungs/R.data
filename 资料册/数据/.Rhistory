par(opar)
mtext("Enhanced Scatterplot",side=3,outer=T,line=-3,cex=2)
par(fig=c(0,0.8,0.55,1),new=T)  #占据横向0~0.8，纵向0.55~1
boxplot(mtcars$wt,horizontal=T,axes=F)
par(fig=c(0.65,1,0,0.8),new=T)  #占据横向0.65~1,纵向0~0.8
boxplot(mtcars$mpg,axes=F)
mtext("Enhanced Scatterplot",side=3,outer=T,line=-3,cex=2)
par(opar)
opar<-par(no.readonly = T)
par(fig=c(0,0.8,0,0.8))  #占据横向范围0~0.8，纵向范围0~0.8
plot(mtcars$wt,mtcars$mpg,xlab = "Miles Per Gallon",ylab="Car Weight")
par(fig=c(0,0.8,0.55,1),new=T)  #占据横向0~0.8，纵向0.55~1
boxplot(mtcars$wt,horizontal=T,axes=F)
par(fig=c(0.65,1,0,0.8),new=T)  #占据横向0.65~1,纵向0~0.8
boxplot(mtcars$mpg,axes=F)
mtext("Enhanced Scatterplot",side=3,outer=T,line=-3,cex=2)
par(opar)
#图形布局的精细控制
#利用fig=完成任务
opar<-par(no.readonly = T)
par(fig=c(0,0.8,0,0.8))  #占据横向范围0~0.8，纵向范围0~0.8
plot(mtcars$wt,mtcars$mpg,xlab = "Miles Per Gallon",ylab="Car Weight")
par(fig=c(0,0.8,0.55,1),new=T)  #占据横向0~0.8，纵向0.55~1
boxplot(mtcars$wt,horizontal=T,axes=F)
par(fig=c(0.65,1,0,0.8),new=T)  #占据横向0.65~1,纵向0~0.8
boxplot(mtcars$mpg,axes=F)
mtext("Enhanced Scatterplot",side=3,outer=T,line=-3,cex=2)  #利用mtext设置标题
par(opar)
#利用fig=完成任务
opar<-par(no.readonly = T)
par(fig=c(0,0.8,0,0.8))  #占据横向范围0~0.8，纵向范围0~0.8
plot(mtcars$wt,mtcars$mpg,xlab = "Miles Per Gallon",ylab="Car Weight")
par(fig=c(0,0.8,0.55,1),new=T)  #占据横向0~0.8，纵向0.55~1
boxplot(mtcars$wt,horizontal=T,axes=F)
par(fig=c(0.65,1,0,0.8),new=T)  #占据横向0.65~1,纵向0~0.8
boxplot(mtcars$mpg,axes=F)
mtext("Enhanced Scatterplot",side=3,outer=T,line=-3,cex=1.5)  #利用mtext设置标题
par(opar)
mydata<-data.frame(x1=c(2,3,6,4),x2=c(3,4,2,8))
mydata$sumx<-mydata$x1+mydata$x2
mydata$meax<-(mydata$x1+mydata$x2)/2
mydata<-transform(mydata,sumx=x1+x2,meanx=(x1+x2)/2)
mydata
mydata$meax
mydata$sumx
mydata<-transform(mydata,sumx=x1+x2,meanx=(x1+x2)/2)
mydata
mydata<-data.frame(x1=c(2,2,6,4),x2=c(3,4,2,8))
mydata$sumx<-mydata$x1+mydata$x2
mydata$meanx<-(mydata$x1+mydata$x2)/2
#2、
attach(mydata)
mydata$sumx<-x1+x2
mydata$meanx<-(x1+x2)/2
detach(mydata)
#3、
mydata<-transform(mydata,sumx=x1+x2,meanx=(x1+x2)/2)
mydata
manager<-c(1,2,3,4,5)
date<-c("10/24/08","10//28/08","10/1/08","10/12/08","5/1/09")
country<-c("US","US","UK","UK","UK")
gender<-c("M","F","F","M","F")
age<-c(32,45,25,39,99)
q1<-c(5,3,3,3,2)
q2<-c(4,5,5,3,2)
q3<-c(5,2,5,4,1)
q4<-c(5,5,5,NA,2)
q5<-c(5,5,2,NA,1)
leadership<-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = F) #创建数据框
leadership
leadership$age[leadership$age == 99]  <-NA  #将99岁年龄值重编码为缺失值
leadership<-within(leadership,{
agecat<-NA
agecat[age>75]   <-"Elder"
agecat[age>=55 & age<=75] <-"Middle Aged"
agecat[age<55]  <-"Young"
})
});leadership
leadership$age[leadership$age == 99]  <-NA  #将99岁年龄值重编码为缺失值
leadership<-within(leadership,{
agecat<-NA
agecat[age>75]             <-"Elder"
agecat[age>=55 & age<=75]  <-"Middle Aged"
agecat[age<55]             <-"Young"
})
leadership
fix(leadership)
fix(leadership)
library(reshape)
install.packages(reshape)
install.packages(reshape)
install.packages(plyr)
library(plyr)
install.packages(plyr)
install.packages(reshape)
install.packages("reshape")
library(reshape)
library(reshape)
?renam
?rename
help(rename)
leadership<-rename(leadership,c(manager="managerID",date="testDate"))
leadership
is.na(leadership)
is.na(leadership[,6：10])
is.na(leadership[,6:10])
y<-sum(x,na.rm = TRUE)
x<-c(1,2,NA,3)
y<-sum(x,na.rm = TRUE)
y<-sum(x,na.rm = TRUE);y
leadership
newdata<-na.omit(leadership)
newdata
is.numeric(leadership)
a<-c(1,2,3)
is.numeric(a)
is.character(a)
as.character(a)
newdata<-leadership[order(leadership$age,)]
newdata<-leadership[order(leadership$age),]
newdata
newdata<-leadership[,c(6:10)]
newdata
myvars<-names(leadership) %in% c("q3","q4")
newdata <- leadership[!myvars]
newdata
newdata<-leadership[which(leadership$gender=="M" & leadership$age > 30),]
newdata
newdata<-subset(leadership,age >= 35| age<24,select = c(q1,q2,q3,q4,q5))
mysample<-leadership[sample(1:nrow(leadership)),3,replace=F]
mysample<-leadership[sample(1:nrow(leadership),3,replace=F]
mysample<-leadership[sample(1:nrow(leadership),3,replace=F),]
mysample<-leadership[sample(1:nrow(leadership),3,replace=FALSE),]
install.packages("RCurl")
install.packages("XML")
install.packages("plyr")
install.packages("stringr")
library(RCurl)
library(XML)
library(dplyr)
library(stringr)
url<-"https://www.zhihu.com/question/31785374/answer/150310292"    #获取目标网页
rd<-getURL(url,encoding="UTF-8")
rdhtml<-htmlParse(rd,encoding = "UTF-8")      #利用xml包函数整理网页树结构
root<-xmlRoot(rdhtml)   #获取根目录
Name<-getNodeSet(root,"//div[@class='zm-editable-content clearfix']/img")
Name
url<-"https://www.zhihu.com/question/31785374/answer/150310292"    #获取目标网页
rd<-getURL(url,encoding="UTF-8")
rdhtml<-htmlParse(rd,encoding = "UTF-8")      #利用xml包函数整理网页树结构
root<-xmlRoot(rdhtml)   #获取根目录
Name<-getNodeSet(root,"//div[@class='zm-editable-content clearfix']/img")
Name
zjrevenue<-read.cav('D:/R/资料册/数据/zjrevenue1.csv',stringsAsFactors=T)
zjrevenue<-read.csv('D:/R/资料册/数据/zjrevenue1.csv',stringsAsFactors=T)
test<-read.csv('D:/R/资料册/数据/zjrevenue1.csv',stringsAsFactors=T)
library('dplyr')
train<-read.csv('D:/R/资料册/数据/zjrevenue1.csv',stringsAsFactors=T)
test<-read.csv('D:/R/资料册/数据/zjrevenue1.csv',stringsAsFactors=T)
library('dplyr')
full<-bind_cols(tain,test)
View(full)
install.packages("dplyr")
install.packages("dplyr")
full<-bind_rows(tain,test)
#install.packages("dplyr")
train<-read.csv('D:/R/资料册/数据/zjrevenue1.csv',stringsAsFactors=T)
test<-read.csv('D:/R/资料册/数据/zjrevenue1.csv',stringsAsFactors=T)
library('dplyr')
full<-bind_rows(train,test)
View(full)
diff(c(1,5,23,29),lag=1)
diff(c(1,5,23,29),lag=2)
diff(c(1,5,23,29),lag=3)
scale(c(1,2,3,4),center = T,scale = T)
runif(5)
runif(5)
set.seed(1234)
runif(5)
set.seed(1234)
runif(5)
set.seed(1234)
runif(5)
set.seed(1234)
runif(5)
library(MASS)
options(digits = 3)
set.seed(1234)
mean<-c(230.7,146.7,3.6)
sigma<-matrix(c(15360.8,6721.2,-47.1,6721.2,4700.9,-16.5,-47.1,-16.5,0.3),nrow=3,ncol=3)
mydata<-mvnorm(500,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
dim(mydata)
head(mydata,n=10)
library(MASS)
options(digits = 3)
set.seed(1234)
mean<-c(230.7,146.7,3.6)
sigma<-matrix(c(15360.8,6721.2,-47.1,6721.2,4700.9,-16.5,-47.1,-16.5,0.3),nrow=3,ncol=3)
mydata<-mvrnorm(500,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
dim(mydata)
head(mydata,n=10)
b<-matrix(runif(12),3,4)
b
log(b)
mydata
mydata<-matrix(rnorm(30),nrow = 6)
mydata
"Reuven Ytzrhak","Greg Knox","Joel England","Mary Rayburn")
"Kobe Bryant","Janice Markhammer","Cheryl Cushing",
options(digits = 2)
student<-c("John Davis","Angela Williams","Bullwinkle Moose",
"Kobe Bryant","Janice Markhammer","Cheryl Cushing",
"Reuven Ytzrhak","Greg Knox","Joel England","Mary Rayburn")
roster<-cbind(Firstname,Lastname,roster[,-2])
options(digits = 2)
Student<-c("John Davis","Angela Williams","Bullwinkle Moose",
"Kobe Bryant","Janice Markhammer","Cheryl Cushing",
"Reuven Ytzrhak","Greg Knox","Joel England","Mary Rayburn")
Math<-c(502,600,412,358,495,512,410,625,573,522)
Science<-c(95,99,80,82,75,85,80,95,89,86)
English<-c(25,22,18,15,20,28,15,30,27,18)
roster<-data.frame(Student,Math,Science,English,stringsAsFactors = F)  #stringsAsFactors = F 不会把字符转化成因子
z<-scale(roster[,2:4])
score<-apply(z, 1, mean)
roster<-cbind(roster,score)
y<-quantile(score,c(0.8,0.6,0.4,0.2))
roster$grade[score>=y[1]]   <-"A"
roster$grade[score<y[1] & score>y[2]]  <-"B"
roster$grade[score<y[2] & score>y[3]]  <-"C"
roster$grade[score<y[3] & score>y[4]]  <-"D"
roster$grade[score>=y[4]]   <-"F"
name<-strsplit((roster$Student),"")
Lastname<-sapply(name,"[",2)
Firstname<-sapply(name,"[",1)
roster<-cbind(Firstname,Lastname,roster[,-2])
roster
name<-strsplit((roster$Student),"")
Lastname<-sapply(name,"[",2)
Firstname<-sapply(name,"[",1)
roster<-cbind(Firstname,Lastname,roster[,-1])
roster
z<-scale(roster[,2:4])
options(digits = 2)
Student<-c("John Davis","Angela Williams","Bullwinkle Moose",
"Kobe Bryant","Janice Markhammer","Cheryl Cushing",
"Reuven Ytzrhak","Greg Knox","Joel England","Mary Rayburn")
Math<-c(502,600,412,358,495,512,410,625,573,522)
Science<-c(95,99,80,82,75,85,80,95,89,86)
English<-c(25,22,18,15,20,28,15,30,27,18)
roster<-data.frame(Student,Math,Science,English,stringsAsFactors = F)  #stringsAsFactors = F 不会把字符转化成因子
z<-scale(roster[,2:4])
score<-apply(z, 1, mean)
score<-apply(z, 1, mean);score
roster<-cbind(roster,score);roster
z<-scale(roster[,2:4])
score<-apply(z, 1, mean);score
roster<-cbind(roster,score);roster
y<-quantile(score,c(0.8,0.6,0.4,0.2))
roster$grade[score>=y[1]]   <-"A"
roster$grade[score<y[1] & score>y[2]]  <-"B"
roster$grade[score<y[2] & score>y[3]]  <-"C"
roster$grade[score<y[3] & score>y[4]]  <-"D"
roster$grade[score<y[4]]   <-"F"
name<-strsplit((roster$Student),"")
Firstname<-sapply(name,"[",1)
roster<-cbind(Firstname,Lastname,roster[,-1])
roster
roster<-roster[order(lastname,firstname)]
roster<-roster[order(lastname,firstname),]
name<-strsplit((roster$Student),"")
lastname<-sapply(name,"[",2)
firstname<-sapply(name,"[",1)
roster<-cbind(firstname,lastname,roster[,-1])
roster<-roster[order(lastname,firstname),]
roster
options(digits = 2)
Student<-c("John Davis","Angela Williams","Bullwinkle Moose",
"Kobe Bryant","Janice Markhammer","Cheryl Cushing",
"Reuven Ytzrhak","Greg Knox","Joel England","Mary Rayburn")
Math<-c(502,600,412,358,495,512,410,625,573,522)
Science<-c(95,99,80,82,75,85,80,95,89,86)
English<-c(25,22,18,15,20,28,15,30,27,18)
roster<-data.frame(Student,Math,Science,English,stringsAsFactors = F)  #stringsAsFactors = F 不会把字符转化成因子
z<-scale(roster[,2:4])
score<-apply(z, 1, mean);score
roster<-cbind(roster,score);roster
y<-quantile(score,c(0.8,0.6,0.4,0.2))
roster$grade[score>=y[1]]   <-"A"
roster$grade[score<y[1] & score>y[2]]  <-"B"
roster$grade[score<y[2] & score>y[3]]  <-"C"
roster$grade[score<y[3] & score>y[4]]  <-"D"
roster$grade[score<y[4]]   <-"F"
name<-strsplit((roster$Student)," ")
lastname<-sapply(name,"[",2)
firstname<-sapply(name,"[",1)
roster<-cbind(firstname,lastname,roster[,-1])
roster<-roster[order(lastname,firstname),]
roster
roster<-roster[order(grade),]
options(digits = 2)
Student<-c("John Davis","Angela Williams","Bullwinkle Moose",
"Kobe Bryant","Janice Markhammer","Cheryl Cushing",
"Reuven Ytzrhak","Greg Knox","Joel England","Mary Rayburn")
Math<-c(502,600,412,358,495,512,410,625,573,522)
Science<-c(95,99,80,82,75,85,80,95,89,86)
English<-c(25,22,18,15,20,28,15,30,27,18)
roster<-data.frame(Student,Math,Science,English,stringsAsFactors = F)  #stringsAsFactors = F 不会把字符转化成因子
z<-scale(roster[,2:4])
score<-apply(z, 1, mean);score
roster<-cbind(roster,score);roster
y<-quantile(score,c(0.8,0.6,0.4,0.2))
roster$grade[score>=y[1]]   <-"A"
roster$grade[score<y[1] & score>y[2]]  <-"B"
roster$grade[score<y[2] & score>y[3]]  <-"C"
roster$grade[score<y[3] & score>y[4]]  <-"D"
roster$grade[score<y[4]]   <-"F"
name<-strsplit((roster$Student)," ")
lastname<-sapply(name,"[",2)
firstname<-sapply(name,"[",1)
roster<-cbind(firstname,lastname,roster[,-1])
roster<-roster[order(roster$grade),]
roster
i<-10
while(i>0)
{print("HELLO");i<-i-1}
if(is.character(grade)) grade<-as.factor(grade))
if(is.character(grade) grade<-as.factor(grade))
if(is.character(grade)) grade<-as.factor(grade)
feelings<-c("sad","happy")
for(i in feelings)
print(
swith(i,
happy= "I am glad you are happy",
sad= "Cheer up"
)
)
feelings<-c("sad","happy")
for(i in feelings)
print(
switch(i,
happy= "I am glad you are happy",
sad= "Cheer up"
)
)
cars<-mtcars[1:5,1:4]
cars
t(cars)
mydata<-raed.table("clipboard",header=T,sep',')
mydata<-raed.table("clipboard",header=T,sep',')
mydata<-raed.table("clipboard",header=T,sep',')
mydata<-raed.table("clipboard",header=T,sep',')
mydata<-raed.table("clipboard",header=F,sep',')
mydata<-raed.table("clipboard",header=T,sep'，')
mydata<-raed.table("clipboard",header=T,sep',')
mydata<-raed.table("clipboard")
mydata<-read.table("clipboard",header=T,sep',')
mydata<-read.table("clipboard")
mydata<-read.table("clipboard",header=T,sep',')
mydata<-read.table("clipboard",header=T,sep'')
mydata<-read.table("clipboard",header=T,sep'/n')
mydata<-read.table("clipboard",header=T)
mydata<-read.table("clipboard",header=T)
mydata
mydata<-read.table("clipboard",header=T)
mydata<-read.table("clipboard",header=T)
mydata<-read.table("clipboard",header=T)
mydata<-read.table("clipboard",header=T)
mydata<-read.table("clipboard",header=T)
mydata<-read.table("clipboard",header=T)
mydata
mydata
str(mydata)
view(mydata)
View(mydata)
mydata<-read.table("clipboard",header=T)
View(mydata)
mydata<-read.table("clipboard",header=T,sep='\t')
View(mydata)
help("read.table")
install.packages("stringr")
library(stringr)
help("stringr")
help("str_split_fixed")
names(mydata)<-("time","cardno","drugID","drugName",
names(mydata)<-("time","cardno","drugID","drugName",
"saleNumber","virtualmoney","actualmoney")   #重命名列名
names(mydata)<-("time","cardno","drugID","drugName",
"saleNumber","virtualmoney","actualmoney")
names(mydata)<-("time","cardno","drugID","drugName","saleNumber","virtualmoney","actualmoney")   #重命名列名
names(mydata)<-c("time","cardno","drugID","drugName","saleNumber","virtualmoney","actualmoney")   #重命名列名
install.packages("stringr")
library(stringr)
help("str_split_fixed")
timesplit<-str_split_fixed(mydata$time," ",n=2)
timesplit
timesplit<-str_split_fixed(mydata$time," ",n=3)
timesplit
timesplit<-str_split_fixed(mydata$time," ",n=2)
timesplit
head(timesplit)
mydata$time<-timesplit[,1]
mydata$time<-as.Date(mydata$time,"%Y-%m-%d")
class(mydata$time)
help(class)
class(mydata$saleNumber)
mydata$time<-as.Date(mydata$time,"%Y-%m-%d")  #将字符类型转化为数值类型
class(mydata$time)
mydata$saleNumber<-as.numeric(mydata$saleNumber)
mydata$virtualmoney<-as.numeric(mydata$virtualmoney)
mydata$actualmoney<-as.numeric(mydata$actualmoney)
class(mydata$saleNumber)
help(order)
mydata<-mydata[order(mydata$time,decreasing = F),]
summary(mtcars[vars])
mpg
vars<-c("mpg","hp","wt")
head(mtcars[vars])
sapply(mtcars[vars],mean)
install.packages("Hmisc")
library(Hmisc)
describe(mtcars[vars])
aggregate(mtcars[vars],by=list(am=mtcars$am),mean)
aggregate(mtcars[vars],by=list(am=mtcars$am),mean)
head(mtcars[vars])
vars<-c("mpg","hp","wt")
head(mtcars[vars])
aggregate(mtcars[vars],by=list(am=mtcars$am),mean)
aggregate(mtcars[vars],by=list(mtcars$am),mean)
by(mtcars[vars],mtcars$am,dstats)
datats<-function(x)(c(mean=mean(x)),sd=sd(x))
by(mtcars[vars],mtcars$am,dstats)
datats<-function(x)(c(mean=mean(x)),sd=sd(x))
by(mtcars[vars],mtcars$am,dstats)
datats<-function(x)(c(mean=mean(x),sd=sd(x))
by(mtcars[vars],mtcars$am,dstats)
datats<-function(x)(c(mean=mean(x),sd=sd(x)))
by(mtcars[vars],mtcars$am,dstats)
by(mtcars[vars],mtcars$am,datats)
dstats<-function(x)(c(mean=mean(x),sd=sd(x)))
by(mtcars[vars],mtcars$am,dstats)
library(reshape)
head(Arthritis)
library(vcd)
head(Arthritis)
mytable<-with(Arthritis,table(Improved))
mytable<-with(Arthritis,table(Improved));mytable
prop.table(mytable)
prop.table(mytable)*100
round(prop.table(mytable)*100,1)
mytable<-xtabs(~Treatment+Improved,data=Arthritis)
mytable<-xtabs(~Treatment+Improved,data=Arthritis);mytable
margin.table(mytable,1)
prop.table(mytable,1)
addmargins(mytable)
install.packages("gmodels")
library(gmodels)
CrossTable(Arthritis$Treatment,Arthritis$Improved)
mytable<-xtabs(~Treatment+Sex+Improved,data=Arthritis)
mytable<-xtabs(~Treatment+Sex+Improved,data=Arthritis);mytable
ftable(mytable)
ftable(mytable)
margin.table(mytable,1)
margin.table(mytable,c(1,3))
library(vcd)
install.packages("vcd")
install.packages("vcd")
chisq.test(mytable)
mytable<-xtabs(~Treatment+Improved,data=Arthritis)
chisq.test(mytable)
fisher.test(mytable)
mantelhaen.test(mytable)
mytable<-xtabs(~Treatment+Improved+Sex,data=Arthritis)
mantelhaen.test(mytable)
library(vcd)
mytable<-xtabs(~Treatment+Improved,data=Arthritis)
assocststats(mytable)
assocstats(mytable)
states<-state.x77[,1:6]
cov(states)
cor(states)
cor(states,method = "spearman")
install.packages("ggm")
pcor(c(1,5,2,3,6),cov(states))
install.packages("ggm")
pcor(c(1,5,2,3,6),cov(states))
library(ggm)
pcor(c(1,5,2,3,6),cov(states))
cor.test(states[,3],states[,5])
install.packages("psysh")
install.packages("psych")
library(psych)
corr.test(states,use="complete")
library(MASS)
t.test(Prob~So,UScrime)
t.test(Prob~So,UScrime,paired=T)
sapply(UScrime[c("U1","U2")],function(x)(c(mean=mean(x),sd=sd(x))))
with(UScrime,t.test((U1,U2,paired=T)))
with(UScrime,t.test(U1,U2,paired=T))
install.packages("ISLR")
library(ISLR)
setwd("D:/R/资料册/数据")
zjrevenue=read.csv("zjrevenue1.csv",header=T)
names(zjrevenue)    #观察各个因素的名称
summary(zjrevenue)
round(cor(zjrevenue,method=c("pearson")),2)  #利用person得出相关系数，并且保留两位小数
library(car)
fit=lm(Y~.,data=zjrevenue[,2:21])
round(vif(fit))
